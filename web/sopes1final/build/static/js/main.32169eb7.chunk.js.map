{"version":3,"sources":["components/main.jsx","App.js","reportWebVitals.js","index.js"],"names":["LinkServidor","Ventana","state","texto","mensajes","url","ejecutar","fetch","method","headers","Accept","body","JSON","stringify","then","result","json","setState","handleChange","event","target","value","className","href","this","CajaTexto","onClick","map","x","rows","type","name","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEMA,EAAe,uCA2FNC,E,4MAxFbC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAEZC,IAAM,G,EA8CNC,SAAW,WACgB,KAArB,EAAKJ,MAAMC,OACbI,MAAMP,EAAc,CAClBQ,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBV,MAAO,EAAKD,MAAMC,UAGnBW,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACL,EAAKE,SAAS,CAAEb,SAAUW,EAAOX,WACjC,EAAKa,SAAS,CAAEd,MAAO,S,EAK/Be,aAAe,SAACC,GACd,EAAKF,SAAS,CAAEd,MAAOgB,EAAMC,OAAOC,S,uDAjEpC,OACE,sBAAKC,UAAU,4BAAf,UACE,qBAAKA,UAAU,wDAAf,SACE,6BACE,mBAAGA,UAAU,iBAAiBC,KAAMC,KAAKnB,IAAzC,+CAMJ,sBAAKiB,UAAU,gBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SAA2BE,KAAKC,cAChC,qBAAKH,UAAU,gBAGjB,wBACEI,QAASF,KAAKlB,SACdgB,UAAU,iCAFZ,oBAMA,oBAAIA,UAAU,YAAd,SACGE,KAAKtB,MAAME,SAASuB,KAAI,SAACC,GAAD,OACvB,6BAAKA,SAIT,yBAAQN,UAAU,uDAAlB,UACE,mBAAGA,UAAU,iBAAiBC,KAAK,+BAAnC,6DAGA,0GAIA,iF,kCAgCR,OACE,0BACEA,KAAK,QACLD,UAAU,8BACVO,KAAK,KACLC,KAAK,WACLC,KAAK,YACLC,SAAUR,KAAKN,mB,GAnFDe,aCGPC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.32169eb7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst LinkServidor = \"http://34.122.72.236:5000/addmensaje\";\r\n\r\nclass Ventana extends Component {\r\n  state = {\r\n    texto: \"\",\r\n    mensajes: [],\r\n  };\r\n  url = \"\";\r\n  render() {\r\n    return (\r\n      <div className=\"card text-center bg-light\">\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\r\n          <h4>\r\n            <a className=\"text-light p-2\" href={this.url}>\r\n              Final de Sistemas Operativos1\r\n            </a>\r\n          </h4>\r\n        </nav>\r\n\r\n        <div className=\"card-body p-5\">\r\n          <div className=\"row p-5\">\r\n            <div className=\"col-md-2\"></div>\r\n            <div className=\"col-md-8\">{this.CajaTexto()}</div>\r\n            <div className=\"col-md-2\"></div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={this.ejecutar}\r\n            className=\"btn btn-outline-primary btn-lg\"\r\n          >\r\n            Enviar\r\n          </button>\r\n          <ul className=\"text-left\">\r\n            {this.state.mensajes.map((x) => (\r\n              <li>{x}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <footer className=\"bg-light my-5 pt-5 text-muted text-center text-small\">\r\n            <a className=\"text-secondary\" href=\"https://github.com/carlosE17\">\r\n              &copy; Carlos Rodrigo Estrada Najarro - 201700314\r\n            </a>\r\n            <p>\r\n              Universidad de San Carlos de Guatemala, Ingenieria en Ciencias y\r\n              Sistemas\r\n            </p>\r\n            <p> Sistemas Operativos 1, 2do Sem. 2020</p>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  ejecutar = () => {\r\n    if (this.state.texto !== \"\") {\r\n      fetch(LinkServidor, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          texto: this.state.texto,\r\n        }),\r\n      })\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          this.setState({ mensajes: result.mensajes });\r\n          this.setState({ texto: \"\" });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ texto: event.target.value });\r\n  };\r\n\r\n  CajaTexto() {\r\n    return (\r\n      <textarea\r\n        href=\"Texto\"\r\n        className=\"form-control rounded shadow\"\r\n        rows=\"10\"\r\n        type=\"textarea\"\r\n        name=\"textValue\"\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ventana;\r\n","import \"./App.css\";\r\nimport Ventana from \"./components/main\";\r\n\r\nfunction App() {\r\n  return <Ventana />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}